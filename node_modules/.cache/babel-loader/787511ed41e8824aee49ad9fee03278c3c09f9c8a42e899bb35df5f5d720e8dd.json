{"ast":null,"code":"var _jsxFileName = \"D:\\\\agents\\\\learning agent\\\\client\\\\src\\\\components\\\\RoadmapWizard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/RoadmapWizard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoadmapWizard = ({\n  onComplete\n}) => {\n  _s();\n  const [step, setStep] = useState(0);\n  const [userPreferences, setUserPreferences] = useState({\n    careerGoal: '',\n    technologies: [],\n    timeCommitment: '',\n    studySchedule: ''\n  });\n  const questions = [{\n    title: \"What is your career goal?\",\n    type: \"select\",\n    options: [\"Frontend Developer\", \"Backend Developer\", \"Full Stack Developer\", \"Data Scientist\", \"UI/UX Designer\"],\n    field: \"careerGoal\"\n  }, {\n    title: \"Which technologies or domains are you interested in learning?\",\n    type: \"multiselect\",\n    options: [\"HTML\", \"CSS\", \"JavaScript\", \"Python\", \"React\", \"Node.js\", \"MongoDB\", \"SQL\"],\n    field: \"technologies\"\n  }, {\n    title: \"How much time can you commit to studying?\",\n    type: \"select\",\n    options: [\"3 months\", \"6 months\", \"1 year\"],\n    field: \"timeCommitment\"\n  }, {\n    title: \"How do you plan to structure your study schedule?\",\n    type: \"select\",\n    options: [\"Daily basis\", \"Weekly basis\", \"Monthly basis\"],\n    field: \"studySchedule\"\n  }];\n  const handleInputChange = (field, value) => {\n    setUserPreferences(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleNext = () => {\n    if (step === questions.length - 1) {\n      onComplete(userPreferences);\n    } else {\n      setStep(prev => prev + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roadmap-wizard\",\n    children: [step === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome! Let's design your personalized learning roadmap.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Answer a few quick questions, and we'll create a step-by-step plan tailored just for you!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: questions[step].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), questions[step].type === \"select\" && /*#__PURE__*/_jsxDEV(\"select\", {\n        value: userPreferences[questions[step].field],\n        onChange: e => handleInputChange(questions[step].field, e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), questions[step].options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), questions[step].type === \"multiselect\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"multiselect\",\n        children: questions[step].options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: userPreferences.technologies.includes(option),\n            onChange: e => {\n              const newTechnologies = e.target.checked ? [...userPreferences.technologies, option] : userPreferences.technologies.filter(tech => tech !== option);\n              handleInputChange('technologies', newTechnologies);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), option]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        disabled: !userPreferences[questions[step].field],\n        className: \"next-button\",\n        children: step === questions.length - 1 ? 'Generate Roadmap' : 'Next'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(RoadmapWizard, \"hNTEHe5DgBomrBOfvjAC3JyeWSQ=\");\n_c = RoadmapWizard;\nexport default RoadmapWizard;\nvar _c;\n$RefreshReg$(_c, \"RoadmapWizard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RoadmapWizard","onComplete","_s","step","setStep","userPreferences","setUserPreferences","careerGoal","technologies","timeCommitment","studySchedule","questions","title","type","options","field","handleInputChange","value","prev","handleNext","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","map","option","checked","includes","newTechnologies","filter","tech","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/agents/learning agent/client/src/components/RoadmapWizard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/RoadmapWizard.css';\r\n\r\nconst RoadmapWizard = ({ onComplete }) => {\r\n  const [step, setStep] = useState(0);\r\n  const [userPreferences, setUserPreferences] = useState({\r\n    careerGoal: '',\r\n    technologies: [],\r\n    timeCommitment: '',\r\n    studySchedule: ''\r\n  });\r\n\r\n  const questions = [\r\n    {\r\n      title: \"What is your career goal?\",\r\n      type: \"select\",\r\n      options: [\"Frontend Developer\", \"Backend Developer\", \"Full Stack Developer\", \"Data Scientist\", \"UI/UX Designer\"],\r\n      field: \"careerGoal\"\r\n    },\r\n    {\r\n      title: \"Which technologies or domains are you interested in learning?\",\r\n      type: \"multiselect\",\r\n      options: [\"HTML\", \"CSS\", \"JavaScript\", \"Python\", \"React\", \"Node.js\", \"MongoDB\", \"SQL\"],\r\n      field: \"technologies\"\r\n    },\r\n    {\r\n      title: \"How much time can you commit to studying?\",\r\n      type: \"select\",\r\n      options: [\"3 months\", \"6 months\", \"1 year\"],\r\n      field: \"timeCommitment\"\r\n    },\r\n    {\r\n      title: \"How do you plan to structure your study schedule?\",\r\n      type: \"select\",\r\n      options: [\"Daily basis\", \"Weekly basis\", \"Monthly basis\"],\r\n      field: \"studySchedule\"\r\n    }\r\n  ];\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setUserPreferences(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (step === questions.length - 1) {\r\n      onComplete(userPreferences);\r\n    } else {\r\n      setStep(prev => prev + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"roadmap-wizard\">\r\n      {step === 0 && (\r\n        <div className=\"welcome-message\">\r\n          <h2>Welcome! Let's design your personalized learning roadmap.</h2>\r\n          <p>Answer a few quick questions, and we'll create a step-by-step plan tailored just for you!</p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"question-container\">\r\n        <h3>{questions[step].title}</h3>\r\n        {questions[step].type === \"select\" && (\r\n          <select\r\n            value={userPreferences[questions[step].field]}\r\n            onChange={(e) => handleInputChange(questions[step].field, e.target.value)}\r\n          >\r\n            <option value=\"\">Select an option</option>\r\n            {questions[step].options.map(option => (\r\n              <option key={option} value={option}>{option}</option>\r\n            ))}\r\n          </select>\r\n        )}\r\n\r\n        {questions[step].type === \"multiselect\" && (\r\n          <div className=\"multiselect\">\r\n            {questions[step].options.map(option => (\r\n              <label key={option}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={userPreferences.technologies.includes(option)}\r\n                  onChange={(e) => {\r\n                    const newTechnologies = e.target.checked\r\n                      ? [...userPreferences.technologies, option]\r\n                      : userPreferences.technologies.filter(tech => tech !== option);\r\n                    handleInputChange('technologies', newTechnologies);\r\n                  }}\r\n                />\r\n                {option}\r\n              </label>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <button \r\n          onClick={handleNext}\r\n          disabled={!userPreferences[questions[step].field]}\r\n          className=\"next-button\"\r\n        >\r\n          {step === questions.length - 1 ? 'Generate Roadmap' : 'Next'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoadmapWizard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}